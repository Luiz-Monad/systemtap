// stapbpf string manipulation -- store string in global data structure

global var
global tab1
global tab2

@define test_print
%(
  printf("[%s]\n", "str0")
  printf("{%s}\n", var)
  printf("<%s>\n", tab1[15])
  printf("(%s)\n", tab2["key"])
%)

global tab3
probe begin {
  printf("BEGIN\n")

  var = "str1"
  tab1[15] = "str2"
  tab2["key"] = "str3"
  tab3["key"] = 3
  assert(tab3["key"] == 3)

  @test_print
}

probe kernel.function("vfs_read") {
  @test_print
  exit()
}

probe end {
  @test_print
  printf("END PASS\n") // TODO check output string in bpf.exp
}
